<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_Altimetry_P1" xml:space="preserve">
    <value>Cada maratón es única por muchas razones, entre ellas, la altimetría de su ruta.</value>
  </data>
  <data name="About_Altimetry_P2" xml:space="preserve">
    <value>Esto quiere decir que podemos crear un perfil de la elevación de nuestra maratón clasificando cada milla y sumando o restando algunos segundos a nuestro paso objetivo como se muestra a continuación:</value>
  </data>
  <data name="About_Altimetry_P3" xml:space="preserve">
    <value>Descenso = 10 segundos más rápido por milla</value>
  </data>
  <data name="About_Altimetry_P4" xml:space="preserve">
    <value>Plano = mantener el paso objetivo</value>
  </data>
  <data name="About_Altimetry_P5" xml:space="preserve">
    <value>Subida = 10 segundos más lento por milla</value>
  </data>
  <data name="About_Altimetry_Title" xml:space="preserve">
    <value>Paso #1: Altimetría de la Ruta</value>
  </data>
  <data name="About_Approach_P1" xml:space="preserve">
    <value> — Teniendo un paso objetivo, de 9:00/milla por ejemplo, se comienza más lento a propósito unos 15 segundos por milla. En otras palabras, se comienza bajando el ritmo de tal manera que por la milla cinco, estará corriendo en el paso objetivo o justo debajo de el.  Parece una locura, pero a ciencia cierta, significa que no se estará corriendo demasiado fuerte, o perdiendo energía tratando de adaptarse a la competencia. Estará justo en su zona, tomando lentamente su paso donde podrá mantenerse todo el día.</value>
  </data>
  <data name="About_Approach_P1_Title" xml:space="preserve">
    <value>Inicio Inteligente (Millas 0 a 5)</value>
  </data>
  <data name="About_Approach_P2" xml:space="preserve">
    <value> — La mayor parte de la carrera se pasará corriendo justo debajo de nuestro ritmo objetivo. Para nuestro corredor de 9:00/milla, esto significa millas en el rango de 8:55/milla. El propósito aquí es ser consistente y lentamente iremos recuperando el excedente de tiempo creado por nuestro ritmo conservador al inicio. En el momento en que lleguemos al final de esta sección en nuestro día, estaremos justamente nivelados con nuestro tiempo objetivo, pero físicamente mucho mejor.</value>
  </data>
  <data name="About_Approach_P2_Title" xml:space="preserve">
    <value>Corre a la Meta (Millas 6 a 20)</value>
  </data>
  <data name="About_Approach_P3" xml:space="preserve">
    <value>El "muro" es la parte de la carrera, donde el cuerpo comienza a retroceder. En general, esto ocurre entre las millas 18 y 22 el día del evento, dependiendo de la ruta, el ritmo, la condición física, etc. Por supuesto, la mayoría de los corredores inician más rápido para tener un "colchón" de tiempo para cuando se desaceleren - Pero estoy aquí para decirles que no existe tal "colchón", y que el tiempo que se ha guardado en la mayoría de los casos probablemente no será ni de lejos suficiente para detener la "hemorragia" al final de su día.</value>
  </data>
  <data name="About_Approach_P4" xml:space="preserve">
    <value>Hasta que llegues al "muro" no estarás compitiendo, estarás sólo corriendo. Uno ignora a los otros corredores y hace su mejor esfuerzo para "aplanar" la ruta marcando el paso inteligentemente. Nutricionalmente se estará "alimentando" a la espera de las últimas seis millas.</value>
  </data>
  <data name="About_Approach_P5" xml:space="preserve">
    <value> — Las últimas seis millas el día de la carrera serán donde los sueños se hacen realidad (o se rompen). Dentro de Marathon Nation no tememos al final de la carrera; es donde comienza nuestro día. Si has seguido el paso correctamente, vas a comenzar a pasar a todos los otros corredores que te rodean que se están desacelerando. Esto no es sólo una aplicación juiciosa de tu condición física, es una estrategia mental de gran alcance que te ayudará a mantener la concentración al igual que tu cuerpo estará intentando de confirmar.</value>
  </data>
  <data name="About_Approach_P5_Title" xml:space="preserve">
    <value>Carrera a la Meta (Millas 21 hasta el final)</value>
  </data>
  <data name="About_Approach_P6" xml:space="preserve">
    <value>En resumen, el enfoque básico de Marathon Nation es:</value>
  </data>
  <data name="About_Approach_P7" xml:space="preserve">
    <value>Regale 15 segundos por milla durante las primeras 6 millas.</value>
  </data>
  <data name="About_Approach_P8" xml:space="preserve">
    <value>Recupere 5 segundos por milla desde la milla 6 a la 20.</value>
  </data>
  <data name="About_Approach_P9" xml:space="preserve">
    <value>Y los últimos 10k al paso objetivo.</value>
  </data>
  <data name="About_Approach_Title" xml:space="preserve">
    <value>Paso #2: The Marathon Nation Race Approach</value>
  </data>
  <data name="About_P1" xml:space="preserve">
    <value>El propósito de este sitio es ayudar a la gente a correr una maratón inteligentemente siguiendo una estrategia de carrera basada en la altimetría de la ruta de carrera y corriendo splits negativos guardando energía para las últimas millas donde la mayoría de los maratonistas bajan su paso considerablemente.</value>
  </data>
  <data name="About_P2" xml:space="preserve">
    <value>Dicho esto vamos a describir los pasos que se siguen para calcular sus splits para un maratón inteligente:</value>
  </data>
  <data name="About_Title" xml:space="preserve">
    <value>ACERCA DE SMART MARATHON</value>
  </data>
  <data name="ContactMe_P1" xml:space="preserve">
    <value>Contáctame para cualquier comentario o pregunta que puedas tener o para solicitar incluir a la lista la altimetría de alguna maratón.</value>
  </data>
  <data name="ContactMe_P2" xml:space="preserve">
    <value>También cualquier experiencia corriendo sus maratones guiadas por Smart Marathon es bienvenida para ser incluida en una sección futura.</value>
  </data>
  <data name="ContactMe_P3" xml:space="preserve">
    <value>Si este sitio ha sido de su ayuda por favor siéntase libre para hacer cualquier donación y contribuir así para pagar gastos de hosting, hacer mejoras y desarrollar futuras secciones:</value>
  </data>
  <data name="ContactMe_Title" xml:space="preserve">
    <value>CONTACTAME</value>
  </data>
  <data name="Distance_10K" xml:space="preserve">
    <value>10K</value>
  </data>
  <data name="Distance_30K" xml:space="preserve">
    <value>30K</value>
  </data>
  <data name="Distance_5K" xml:space="preserve">
    <value>5K</value>
  </data>
  <data name="Distance_HalfMarathon" xml:space="preserve">
    <value>Media Maratón</value>
  </data>
  <data name="Distance_Marathon" xml:space="preserve">
    <value>Maratón</value>
  </data>
  <data name="Distance_Other" xml:space="preserve">
    <value>Otra</value>
  </data>
  <data name="Label_Calculate" xml:space="preserve">
    <value>CALCULAR</value>
  </data>
  <data name="Label_Distance" xml:space="preserve">
    <value>DISTANCIA</value>
  </data>
  <data name="Label_Event" xml:space="preserve">
    <value>EVENTO</value>
  </data>
  <data name="Label_FinishTime" xml:space="preserve">
    <value>TIEMPO FINAL</value>
  </data>
  <data name="Label_GoalTime" xml:space="preserve">
    <value>TIEMPO OBJETIVO</value>
  </data>
  <data name="Label_Instructions" xml:space="preserve">
    <value>Ingrese su tiempo meta y clasifique cada split de acuerdo a la altimetría de la carrera</value>
  </data>
  <data name="Label_RealDistance" xml:space="preserve">
    <value>TU DISTANCIA</value>
  </data>
  <data name="Label_Pace" xml:space="preserve">
    <value>PASO</value>
  </data>
  <data name="Label_GoalPace" xml:space="preserve">
    <value>PASO OBJETIVO</value>
  </data>
  <data name="Label_Time" xml:space="preserve">
    <value>TIEMPO</value>
  </data>
  <data name="Label_Or" xml:space="preserve">
    <value>o</value>
  </data>
</root>